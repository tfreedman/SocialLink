<% if defined?(person) # Used by Hindsight %>
  <% media_path = ApplicationController::SOCIALLINK_BASE_MEDIA_URL + "/media/#{person[:name]}/Tumblr/#{post[:content][:username]}/" %>
<% else # Used by SocialLink %>
  <% media_path = ApplicationController::SOCIALLINK_BASE_MEDIA_URL + "/media/#{snpc.name}/#{snpc.service}/#{snpc.username}/" %>
<% end %>

<% x = Nokogiri::HTML.parse(post[:content][:xml_dump]) %>
<% if post[:content][:post_type] == "post-content--text" %>
  <% title = Nokogiri::HTML(x.css('tumblr post regular-title').text) %>
  <%= raw(title) %>

  <% body = Nokogiri::HTML(x.css('tumblr post regular-body').text) %>
  <% body.css('img').each do |image| %>
    <% asset_name = "#{image.attribute('src').value.split('/')[-1].split('?')[0]}" %>
    <% if post[:content][:assets] && post[:content][:assets][asset_name] %>
      <% if post[:content][:assets][asset_name].has_key?(:full_size_filename) %>
        <% asset_name = post[:content][:assets][asset_name][:full_size_filename] %>
      <% else %>
        <% asset_name = post[:content][:assets][asset_name][:filename] %>
      <% end %>
      <% image.attributes["src"].value = media_path + asset_name %>
      <% image.wrap("<a data-fancybox=\"tumblr_#{post[:content][:post_id]}\" href=\"#{media_path + asset_name}\">") %>
    <% end %>
  <% end %>
  <%= raw(body.to_html) %>
<% elsif post[:content][:post_type] == "post-content--video" %>
    <%= raw x.css('tumblr post video-caption').text %>
    <% video = x.css('video-player:not([max-width])')[0].text %>
    <% if x.css('video-source content-type')[0] #local media %>
      <% if video.include?('hdUrl":false') # low resolution %>
        <% url = Nokogiri::HTML(video).css('source')[0].attribute('src').value %>
      <% else # HD %>
        <% url = video.split('hdUrl":"')[1].split('"')[0] %>
      <% end %>
      <% asset_name = "#{url.split('/')[-1].split('?')[0]}" %>
      <% if post[:content][:assets] && post[:content][:assets][asset_name] %>
        <video controls preload="metadata" poster="<%= media_path + post[:content][:assets][asset_name][:poster_filename] %>">
          <source src="<%= media_path + post[:content][:assets][asset_name][:filename] %>" type="video/mp4" />
         </video>
      <% else %>
        ??? video file asset missing (asset name: <%= asset_name %>)
      <% end %>
    <% else # embed from a different website %>
      <%= raw x.css('video-player:not([max-width])')[0].text %>
    <% end %>
<% elsif post[:content][:post_type] == "post-content--quote" %>
  <blockquote><%= x.css('tumblr post quote-text')[0].text %></blockquote>
  <cite>-- <%= raw x.css('tumblr post quote-source')[0].text %></cite>
<% elsif post[:content][:post_type] == "post-content--chat" %>
  <% if x.css('tumblr post conversation-title')[0] %>
    <h3><%= x.css('tumblr post conversation-title')[0].text %></h3>
  <% end %>
  <% x.css('tumblr post conversation line').each do |line| %>
    <strong><%= line.attribute('name').value %>: </strong><span><%= line.text %></span><br />
  <% end %>  
<% elsif post[:content][:post_type] == "post-content--audio" %>
  <%= raw x.css('audio-caption')[0].text %>
  <figure>
    <% begin %>
      <figcaption><%= x.css('id3-title')[0].text %></figcaption>
    <% rescue %>
    <% end %>
    <audio controls>
      <source src="<%= media_path + post[:content][:assets].values[0][:filename] %>" type="audio/mpeg">
      Your browser does not support the audio element.
    </audio>
  </figure>
  <br />
<% elsif post[:content][:post_type] == "post-content--link" %>
  <% link = Nokogiri::HTML(x.css('tumblr post link-text').text) %>
  <a href="<%= x.css('tumblr post link-url').text %>"><%= raw link %></a>

  <% description = Nokogiri::HTML(x.css('tumblr post link-description').text) %>
  <% description.css('img').each do |image|
    url = nil
    size = nil
    if image.attr("srcset")
        image.attr("srcset").split(', ').each do |srcset|
        if !size || srcset.split(' ')[1].to_i > size
          url = srcset.split(' ')[0]
          size = srcset.split(' ')[1].to_i
        end
        image.remove_attribute('srcset')
        image.attributes["src"].value = media_path + image.attr('src').split('/')[-1]
      end
    else
      image.attributes["src"].value = media_path + image.attr('src').split('/')[-1]
    end
    image.wrap("<a data-fancybox=\"tumblr_#{post[:content][:post_id]}\" href=\"#{media_path + image.attr('src').split('/')[-1]}\">")
  end %>

  <%= raw(description.to_html) %>  
<% elsif post[:content][:post_type] == "post-content--photo" %>
  <% output = Nokogiri::XML.parse(post[:content][:xml_dump]) %>
  <% if output.css('photo-caption').count > 0 %>
     <%= raw(output.css('photo-caption')[0].text || '') %>
  <% end %>
  <% last_photo = nil %>
  <% output.css('photo-url[max-width="1280"]').each do |photo| %>
    <% asset_name = "#{photo.text.split('/')[-1].split('?')[0]}" %>
    <% if post[:content][:assets] && post[:content][:assets][asset_name] && last_photo != photo.text.split('/')[-1] %>
      <% if post[:content][:assets][asset_name].has_key?(:full_size_filename) %>
        <% asset_name = post[:content][:assets][asset_name][:full_size_filename] %>
      <% else %>
        <% asset_name = post[:content][:assets][asset_name][:filename] %>
      <% end %>
      <a data-fancybox="tumblr_<%= post[:content][:post_id] %>" href="<%= media_path + asset_name %>">
        <img src="<%= media_path + asset_name %>" />
      </a>
      <% last_photo = photo.text.split('/')[-1] %>
    <% end %>
  <% end %>
<% elsif post[:content][:post_type] == "post-content--answer" %>
  <% question = Nokogiri::HTML(x.css('tumblr post question').text) %>
  <strong><%= x.css('post').attribute('asking_blog').value %></strong> asked: <%= raw(question) %>

  <% answer = Nokogiri::HTML(x.css('tumblr post answer').text) %>
  <% answer.css('img').each do |image|
    url = nil
    size = nil
    if image.attr("srcset")
        image.attr("srcset").split(', ').each do |srcset|
        if !size || srcset.split(' ')[1].to_i > size
          url = srcset.split(' ')[0]
          size = srcset.split(' ')[1].to_i
        end
        image.remove_attribute('srcset')
        image.attributes["src"].value = media_path + image.attr('src').split('/')[-1]
      end
    else
      image.attributes["src"].value = media_path + image.attr('src').split('/')[-1]
    end
    image.wrap("<a data-fancybox=\"tumblr_#{post[:content][:post_id]}\" href=\"#{media_path + image.attr('src').split('/')[-1]}\">")
  end %>

  <%= raw(answer.to_html) %>
<% end %>

<% x.css('post tag').each do |tag| %>
  <em>#<%= tag.text %></em>
<% end %>

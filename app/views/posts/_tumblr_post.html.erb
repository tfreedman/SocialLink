<% if post[:type] == "tumblr_post-content--text" %>
  <%= raw(post[:text]) %>
<% elsif post[:type] == "tumblr_post-content--video" %>
  <% x = Nokogiri::HTML.parse(post[:content][:xml_dump]) %>
  <% text = x.css('tumblr post').text %>
  <% begin %>
    <% url = "https://ve.media.tumblr.com/" + Nokogiri::HTML.parse(x.css('video-player')[0].text).css('source').attribute('src').text.split('/')[-2] + '_480.mp4' %>
    <video controls preload="metadata">
      <source src="<%= url %>" />
     </video>
  <% rescue %>
     video
  <% end %>
<% elsif post[:type] == "tumblr_post-content--audio" %>
  <% x = Nokogiri::HTML.parse(post[:content][:xml_dump]) %>
  <% text = x.css('tumblr post').text %>
  <%= raw(text) %>
  audio
<% elsif post[:type] == "tumblr_post-content--chat" %>
  <%= raw(post[:text]) %>
  chat
<% elsif post[:type] == "tumblr_post-content--link" %>
  <% x = Nokogiri::HTML.parse(post[:content][:xml_dump]) %>

  <% link = Nokogiri::HTML(x.css('tumblr post link-text').text) %>
  <a href="<%= x.css('tumblr post link-url').text %>"><%= raw link %></a>

  <% description = Nokogiri::HTML(x.css('tumblr post link-description').text) %>
  <% description.css('img').each do |image|
    url = nil
    size = nil
    if image.attr("srcset")
        image.attr("srcset").split(', ').each do |srcset|
        if !size || srcset.split(' ')[1].to_i > size
          url = srcset.split(' ')[0]
          size = srcset.split(' ')[1].to_i
        end
        image.remove_attribute('srcset')
        image.attributes["src"].value = "/media/#{person[:name]}/Tumblr/#{post[:content][:username]}/#{image.attr('src').split('/')[-1]}"
      end
    else
      image.attributes["src"].value = "/media/#{person[:name]}/Tumblr/#{post[:content][:username]}/#{image.attr('src').split('/')[-1]}"
    end
    image.wrap("<a data-fancybox=\"tumblr_#{post[:content][:post_id]}\" href=\"/media/#{person[:name]}/Tumblr/#{post[:content][:username]}/#{image.attr('src').split('/')[-1]}\">")
  end %>

  <%= raw(description.to_html) %>  
<% elsif post[:type] == "tumblr_post-content--quote" %>
  <%= raw(post[:text]) %>
  quote
<% elsif post[:type] == "tumblr_post-content--iframe" %>
  <%= raw(post[:text]) %>
  iframe
<% elsif post[:type] == "tumblr_post-content--photo" %>
  <% output = Nokogiri::XML.parse(post[:content][:xml_dump]) %>
  <% if output.css('photo-caption').count > 0 %>
     <%= raw(output.css('photo-caption')[0].text || '') %>
  <% end %>
  <% last_photo = nil %>
  <% output.css('photo-url[max-width="1280"]').each do |photo| %>
    <% if last_photo != photo.text.split('/')[-1] %>
      <a data-fancybox="tumblr_<%= post[:content][:post_id] %>" href="/media/<%= person[:name] %>/Tumblr/<%= post[:content][:username] %>/<%= photo.text.split('/')[-1] %>">
        <img src="/media/<%= person[:name] %>/Tumblr/<%= post[:content][:username] %>/<%= photo.text.split('/')[-1] %>" />
      </a>
      <% last_photo = photo.text.split('/')[-1] %>
    <% end %>
  <% end %>
<% elsif post[:type] == "tumblr_post-content--answer" %>
  <% x = Nokogiri::HTML.parse(post[:content][:xml_dump]) %>
  <% question = Nokogiri::HTML(x.css('tumblr post question').text) %>
  <%= raw(question) %>

  <% answer = Nokogiri::HTML(x.css('tumblr post answer').text) %>
  <% answer.css('img').each do |image|
    url = nil
    size = nil
    if image.attr("srcset")
        image.attr("srcset").split(', ').each do |srcset|
        if !size || srcset.split(' ')[1].to_i > size
          url = srcset.split(' ')[0]
          size = srcset.split(' ')[1].to_i
        end
        image.remove_attribute('srcset')
        image.attributes["src"].value = "/media/#{person[:name]}/Tumblr/#{post[:content][:username]}/#{image.attr('src').split('/')[-1]}"
      end
    else
      image.attributes["src"].value = "/media/#{person[:name]}/Tumblr/#{post[:content][:username]}/#{image.attr('src').split('/')[-1]}"
    end
    image.wrap("<a data-fancybox=\"tumblr_#{post[:content][:post_id]}\" href=\"/media/#{person[:name]}/Tumblr/#{post[:content][:username]}/#{image.attr('src').split('/')[-1]}\">")
  end %>

  <%= raw(answer.to_html) %>
<% end %>
